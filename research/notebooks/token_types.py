from enum import Enum

class TokenTypes(Enum):
    CompilationUnit=('CompilationUnit', 3)
    Import=('Import', 4)
    ClassDeclaration=('ClassDeclaration', 9)
    FieldDeclaration=('FieldDeclaration', 6)
    ReferenceType=('ReferenceType', 4)
    TypeArgument=('TypeArgument', 2)
    VariableDeclarator=('VariableDeclarator', 3)
    BasicType=('BasicType', 2)
    BinaryOperation=('BinaryOperation', 3)
    Cast=('Cast', 2)
    Literal=('Literal', 6)
    ArrayCreator=('ArrayCreator', 7)
    ClassCreator=('ClassCreator', 8)
    MethodDeclaration=('MethodDeclaration', 10)
    FormalParameter=('FormalParameter', 6)
    LocalVariableDeclaration=('LocalVariableDeclaration', 5)
    MethodInvocation=('MethodInvocation', 8)
    WhileStatement=('WhileStatement', 4)
    MemberReference=('MemberReference', 6)
    BlockStatement=('BlockStatement', 3)
    StatementExpression=('StatementExpression', 3)
    ForStatement=('ForStatement', 4)
    ForControl=('ForControl', 3)
    VariableDeclaration=('VariableDeclaration', 4)
    Assignment=('Assignment', 3)
    ConstructorDeclaration=('ConstructorDeclaration', 9)
    This=('This', 4)
    ReturnStatement=('ReturnStatement', 3)
    ArraySelector=('ArraySelector', 2)
    EnhancedForControl=('EnhancedForControl', 2)
    IfStatement=('IfStatement', 5)
    TernaryExpression=('TernaryExpression', 3)
    TryStatement=('TryStatement', 6)
    CatchClause=('CatchClause', 3)
    CatchClauseParameter=('CatchClauseParameter', 4)
    BreakStatement=('BreakStatement', 3)
    Annotation=('Annotation', 3)
    ArrayInitializer=('ArrayInitializer', 1)
    DoStatement=('DoStatement', 4)
    ThrowStatement=('ThrowStatement', 3)
    InterfaceDeclaration=('InterfaceDeclaration', 8)
    ContinueStatement=('ContinueStatement', 3)
    TypeParameter=('TypeParameter', 2)
    Statement=('Statement', 2)
    LambdaExpression=('LambdaExpression', 2)
    InferredFormalParameter=('InferredFormalParameter', 1)
    ExplicitConstructorInvocation=('ExplicitConstructorInvocation', 6)
    SuperConstructorInvocation=('SuperConstructorInvocation', 6)
    TryResource=('TryResource', 5)
    MethodReference=('MethodReference', 3)
    SwitchStatement=('SwitchStatement', 4)
    SwitchStatementCase=('SwitchStatementCase', 2)
    ClassReference=('ClassReference', 6)
